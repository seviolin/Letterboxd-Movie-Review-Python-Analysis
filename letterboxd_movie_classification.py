# -*- coding: utf-8 -*-
"""Letterboxd Movie Classification

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/16wUzZYSIPi3Sb2s7Esg3Ng4qHiyTvjyi
"""

import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt
import warnings
warnings.filterwarnings('ignore')

df = pd.read_csv('Letterbox Movie Classification.csv')
print(df)

"""## EDA"""

df.info()

df.isna().sum()

df.duplicated().sum()

df.head(15)

df.describe()

1. Top 5 directors with the most movies watched

top_5_directors = df.groupby('Director')['Watches'].sum().sort_values(ascending=False).head(5)
print(top_5_directors)

top_directors_df = df[df['Director'].isin(top_5_directors.index)]

result = top_directors_df.groupby('Director').agg({
    'Watches': 'sum',
    'Film_title': lambda x: list(x)
}).sort_values('Watches', ascending=False)
print(result)

"""2. What is the most appeared in list appearance?"""

top_movies_by_appearance = df.sort_values('List_appearances', ascending=False)[['Film_title', 'List_appearances']].head()
print(top_movies_by_appearance)

"""3. Language distribution"""

plt.figure(figsize=(10, 6))
language_counts = df['Original_language'].value_counts()
sns.countplot(data=df, x='Original_language', order=language_counts.index, palette='Set3')
plt.title('Language distribution of movies')
plt.xlabel('Original Language')
plt.ylabel('Count')
plt.xticks(rotation=45)
plt.tight_layout()
plt.show()

"""4. Top 5 movies with 5-star ratings"""

top_5_5_stars = (
    df.groupby('5_stars')
    .agg({
        'Film_title': lambda x: list(x),
        'Director': 'sum',
    })
)
top_5_5_stars = top_5_5_stars.sort_values('Director', ascending=False).head(5)
print(top_5_5_stars)

"""5. Top 5 movies with 3-star ratings"""

top_5_3_stars = (
    df.groupby('3_stars')
    .agg({
        'Film_title': lambda x: list(x),
        'Director': 'sum',
    })
)
top_5_3_stars = top_5_3_stars.sort_values('Director', ascending=False).head(5)
print(top_5_3_stars)

"""6. Top 5 movies with 1-star ratings"""

top_5_1_star = (
    df.groupby('1_star')
    .agg({
        'Film_title': lambda x: list(x),
        'Director': 'sum',
    })
)
top_5_1_star = top_5_1_star.sort_values('Director', ascending=False).head(5)
print(top_5_1_star)

"""7. Distribution of average rating"""

plt.figure(figsize=(10, 6))
sns.histplot(df['Average_rating'], bins=20, kde=True, color='teal')
plt.title('Distribution of Average Ratings')
plt.xlabel('Average Rating')
plt.ylabel('Frequency')
plt.tight_layout()
plt.show()

"""8. What is the shortest and longest movie?"""

shortest_movie = df[df['Runtime'] == df['Runtime'].min()]
longest_movie = df[df['Runtime'] == df['Runtime'].max()]

print("Shortest Movie:")
print(shortest_movie[['Film_title', 'Runtime', 'Director']])

print("\nLongest Movie:")
print(longest_movie[['Film_title', 'Runtime', 'Director']])